extends CanvasLayer

'''
1. UI(User Interface)란?
	ㄴ 플레이어가 게임과 상호작용하는 화면 요소

2. UX(User Experience)란?
	ㄴ 플레이어가 게임을 경험하며 느끼는 만족도
	ㄴ 핵심 요소
		ㄴ 직관성: 무엇을 해야 할지 바로 알 수 있어야 함
		ㄴ 일관성: UI 스타일과 동작이 게임 전체에서 통일
		ㄴ 피드백: 입력에 즉각적인 반응 제공
		ㄴ 접근성: 다양한 사용자 환경에서도 사용 가능

3. 기본 구조
	3-1. Control 노드
		ㄴ UI를 구성하는 기본 노드로 모든 UI 노드는 Control을 상속
		ㄴ 주요 속성
			ㄴ Anchors Presets: 미리 정의된 앵커
			ㄴ Anchors
				ㄴ 자식 Control이 화면에서 어느 위치를 기준으로 움직일지 결정
				ㄴ 값 범위: 0.0 ~ 1.0 (0: 부모 시작점, 1: 부모 끝점)
	
	3-2. Container 노드
		ㄴ 자식 Control 노드를 자동으로 배치
		ㄴ 특징
			ㄴ Container 자체는 위치와 크기를 조정
			ㄴ 자식 노드는 Container 규칙에 따라 자동 배치
		ㄴ 주요 속성
			ㄴ Alignment		: 자식 배치 기준 (Begin / Center / End)
			ㄴ Separation	: 자식 간 간격

4. Control 노드와 Container 노드의 차이
	==========================================================
	구분			||	Control 노드		|	Container 노드
	==========================================================
	Anchors 기준	||	자식 위치 결정		|	컨테이너 자체 위치 결정
	==========================================================

5. 정리
	ㄴ UI				-> 화면 요소
	ㄴ UX				-> 플레이어 경험
	ㄴ Control 노드		-> UI 기본 노드
	ㄴ Container 노드		-> 자식 자동 배치
	ㄴ Anchors			-> 위치 기준점
	ㄴ Anchors Preset	-> 빠른 정렬에 활용
'''
