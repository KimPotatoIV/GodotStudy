extends Node2D

'''
1. while문이란?
	ㄴ 조건이 참(true)인 동안 코드를 반복 실행하는 반복문
	ㄴ 조건이 거짓(false)이 되면 반복이 종료됨

2. while문
	while 조건식:
		실행할 코드
	
	ㄴ 반복이 끝나지 않으면 무한 루프에 빠질 수 있음
		ㄴ  반드시 조건을 false로 만들 로직이 필요

3. break와 continue
	ㄴ break		->	반복문을 즉시 종료
	ㄴ continue	->	이번 반복만 건너뛰고 다음 반복으로 넘어감
'''

func _ready() -> void:
	print("=====기본 while문=====")
	
	var i: int = 0
	while i < 3:
		print("i:", i)
		i += 1

	print("======break 사용======")

	var j: int = 0
	while j < 5:
		if j == 3:
			break
		print("j:", j)
		j += 1

	print("====continue 사용====")

	var k: int = 0
	while k < 5:
		k += 1
		if k == 3:
			continue
		print("k:", k)

	print("=======무한 루프=======")
	
	'''
	while true:
		print("무한 루프!")
	'''

'''
4. for문 while문 비교
	구분				|	for문						|	while문
	----------------------------------------------------------------------------
	반복 방식			|	반복할 대상 또는 범위를			|	조건식이 참(true)인 동안
					|	미리 정하고 반복				|	계속 반복
	----------------------------------------------------------------------------
	주 사용 사례		|	반복 횟수가 정해져 있을 때		|	반복 횟수가 불확실하거나
					|								|	조건에 따라 결정될 때
	----------------------------------------------------------------------------
	기본 문법			|	for 변수 in 반복할_대상:		|	while 조건식:
					|		실행할 코드				|		실행할 코드
	----------------------------------------------------------------------------
	range() 활용		|	range()로 숫자 범위 			|	range() 사용 불가
					|	반복 가능						|	직접 카운터 변수 증가 필요
	----------------------------------------------------------------------------
	반복 종료 방법		|	break, continue				|	break, continue
					|	사용 가능						|	사용 가능
	----------------------------------------------------------------------------
	무한 루프 구현		|	거의 사용하지 않음				|	특수한 경우에 사용
	----------------------------------------------------------------------------
	가독성			|	정해진 범위나 리스트를 반복할	|	조건 기반 반복 시 더 명확
					|	때 간결하고 직관적				|
	----------------------------------------------------------------------------
'''
